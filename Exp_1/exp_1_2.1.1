/*
******************************************************************************
File:     main.c
Info:     Generated by Atollic TrueSTUDIO(R) 9.3.0   2019-10-08

The MIT License (MIT)
Copyright (c) 2019 STMicroelectronics

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

******************************************************************************
*/

/* Includes */
#include "stm32l4xx.h"
#include <stdio.h>
#include "functions.h"
/* Private macro */
#define NUMBERSIZE 20
/* Private variables */

unsigned int numbers[NUMBERSIZE] = {10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ,12, 13, 14, 15 ,16, 17, 18, 10}; ////array de tama√±o numbersize que va del subindice 0 a (numbersize -1)
unsigned int number_to_find = 10;
/* Private function prototypes */
/* Private functions */

// --------- </PARA USAR EL DWT > -----------

volatile unsigned int *DWT_CYCCNT  ;
volatile unsigned int *DWT_CONTROL ;
volatile unsigned int *SCB_DEMCR   ;

void reset_timer(){
    DWT_CYCCNT   = (int *)0xE0001004; //address of the register
    DWT_CONTROL  = (int *)0xE0001000; //address of the register
    SCB_DEMCR    = (int *)0xE000EDFC; //address of the register
    *SCB_DEMCR   = *SCB_DEMCR | 0x01000000;
    *DWT_CYCCNT  = 0; // reset the counter
    *DWT_CONTROL = 0;
}

void start_timer(){
    *DWT_CONTROL = *DWT_CONTROL | 1 ; // enable the counter
}

void stop_timer(){
	*DWT_CONTROL = *DWT_CONTROL & 0xFFFFFFFE ; // disable the counter by clearing the enable bit
}

unsigned int getCycles(){
    return *DWT_CYCCNT;
}
// --------- </PARA USAR EL DWT > -----------

/**
**===========================================================================
**
**  Abstract: main program
**
**===========================================================================
*/






void search(unsigned int *array_to_search, unsigned int number_to_check){
  int i = 0;
  char flag = 0;

  while (i<NUMBERSIZE){
	if (*(array_to_search+i) == number_to_find){
		printf("found match on index %d\n", i);
		flag = 1;
	}//end if
	i++;
  } //end while
  if (flag == 0)
	  printf ("match not found");
}

//int main(void)
//{
//  reset_timer();
//  start_timer();
//
//  search(numbers, number_to_find);
//
//  stop_timer();
//  printf ("el programa se demoro %u ciclos de reloj\n", getCycles());
//
//  return 0;
//}

//-----------------
/*
int main(void)
{
  reset_timer();
  start_timer();
  int i = 0;
  char flag = 0;

  stop_timer();
  printf("antes del while vamos en %u ciclos de reloj\n", getCycles());
  start_timer();

  while (i < NUMBERSIZE){

	  if (numbers[i] == number_to_find){
		  printf("found match on index %d \n", i);
		flag = 1;
	}//end if
	stop_timer();
	printf("con i = %d, tenemos clock = %u \n", i, getCycles());
	start_timer();
	i++;
  } //end while

  if (flag == 0)
	  printf ("match not found\n");

  stop_timer();
  printf ("el programa se demoro %u ciclos de reloj\n", getCycles());
  return 0;
}//end main
*/
